#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstring>
#include <list>
#include <cmath>
using namespace std;

int N;
int map[26][26];
int visit[26][26];
int result[400];
int idx;
       
void DFS(int y, int x, int idx) {
    visit[y][x] = 1;
    //cout<<"("<<y<<" , "<<x<<")"<<" -> ";
    result[idx]++;
    if((y > 0) && map[y - 1][x] && !visit[y - 1][x]) {
        DFS(y - 1, x, idx);
    }
    if((y < N - 1) && map[y + 1][x] && !visit[y + 1][x]) {
        DFS(y + 1, x, idx);
    }
    if((x > 0) && map[y][x - 1] && !visit[y][x - 1]) {
        DFS(y, x - 1, idx);
    }
    if((x < N - 1) && map[y][x + 1] && !visit[y][x + 1]) {
        DFS(y, x + 1, idx);
    }
}

int main(void)
{
    string value;
    cin>>N;
    for(int i = 0; i<N; i++) {
        cin>>value;
        for(int j=0; j<N; j++) {
            map[i][j] = value[j] - 48;
        }
    }
    for(int i=0; i<N; i++) {
        for(int j=0; j<N; j++) {
            if(map[i][j] && !visit[i][j])   DFS(i, j, idx++);
        }
    }
    sort(result, result + idx);
    cout<<idx<<endl;
    for(int i=0; i<idx; i++) cout<<result[i]<<endl;
    
    return 0;
}
